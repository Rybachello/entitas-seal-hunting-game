//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity timeLeftEntity { get { return GetGroup(GameStateMatcher.TimeLeft).GetSingleEntity(); } }
    public TimeLeftComponent timeLeft { get { return timeLeftEntity.timeLeft; } }
    public bool hasTimeLeft { get { return timeLeftEntity != null; } }

    public GameStateEntity SetTimeLeft(float newValue) {
        if (hasTimeLeft) {
            throw new Entitas.EntitasException("Could not set TimeLeft!\n" + this + " already has an entity with TimeLeftComponent!",
                "You should check if the context already has a timeLeftEntity before setting it or use context.ReplaceTimeLeft().");
        }
        var entity = CreateEntity();
        entity.AddTimeLeft(newValue);
        return entity;
    }

    public void ReplaceTimeLeft(float newValue) {
        var entity = timeLeftEntity;
        if (entity == null) {
            entity = SetTimeLeft(newValue);
        } else {
            entity.ReplaceTimeLeft(newValue);
        }
    }

    public void RemoveTimeLeft() {
        timeLeftEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public TimeLeftComponent timeLeft { get { return (TimeLeftComponent)GetComponent(GameStateComponentsLookup.TimeLeft); } }
    public bool hasTimeLeft { get { return HasComponent(GameStateComponentsLookup.TimeLeft); } }

    public void AddTimeLeft(float newValue) {
        var index = GameStateComponentsLookup.TimeLeft;
        var component = CreateComponent<TimeLeftComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeLeft(float newValue) {
        var index = GameStateComponentsLookup.TimeLeft;
        var component = CreateComponent<TimeLeftComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeLeft() {
        RemoveComponent(GameStateComponentsLookup.TimeLeft);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherTimeLeft;

    public static Entitas.IMatcher<GameStateEntity> TimeLeft {
        get {
            if (_matcherTimeLeft == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.TimeLeft);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherTimeLeft = matcher;
            }

            return _matcherTimeLeft;
        }
    }
}
