//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public SpawnTimeComponent spawnTime { get { return (SpawnTimeComponent)GetComponent(GameStateComponentsLookup.SpawnTime); } }
    public bool hasSpawnTime { get { return HasComponent(GameStateComponentsLookup.SpawnTime); } }

    public void AddSpawnTime(float newValue) {
        var index = GameStateComponentsLookup.SpawnTime;
        var component = CreateComponent<SpawnTimeComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSpawnTime(float newValue) {
        var index = GameStateComponentsLookup.SpawnTime;
        var component = CreateComponent<SpawnTimeComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnTime() {
        RemoveComponent(GameStateComponentsLookup.SpawnTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherSpawnTime;

    public static Entitas.IMatcher<GameStateEntity> SpawnTime {
        get {
            if (_matcherSpawnTime == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.SpawnTime);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherSpawnTime = matcher;
            }

            return _matcherSpawnTime;
        }
    }
}
